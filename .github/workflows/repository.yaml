name: "Repository CI"

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      # - review_requested
    branches:
      - main

concurrency:
  # on main, we want all builds to complete even if commits/merging happens faster to make it easier to discover at which point
  # something broke; else, we cancel "old" builds and run/(re)start the build with the latest changes
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}-{1}', github.workflow, github.sha) || format('ci-{0}-{1}', github.workflow, github.ref) }}

jobs:
  pr_auto_approve:
    name: 'Auto Approve PR'
    runs-on: ubuntu-latest

    # only auto-approve PRs that were opened by renovate or the snap-package updater
    if: github.actor == 'renovate[bot]' || github.actor == 'snap-package-updater[bot]'

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@7ce9ffdcdeb2ba82b01b51d6584a6a85872336d4 # renovate: tag=v1.5.1
        with:
          app_id: ${{ secrets.REPOSITORY_ASSISTANT_APP_ID }}
          private_key: ${{ secrets.REPOSITORY_ASSISTANT_PRIVATE_KEY }}

      - name: GitHub - Auto Approve Pull Request
        id: github_auto_approve_pr
        uses: hmarr/auto-approve-action@5d04a5ca6da9aeb8ca9f31a5239b96fc3e003029 # tag=v2.1.0
        with:
          github-token: ${{ steps.github_generate_app_token.outputs.token }}

  pr_auto_merge:
    name: 'Enable Auto Merge PR'
    runs-on: ubuntu-latest

    # only auto-merge PRs that were opened by renovate or the snap-package updater
    if: github.actor == 'renovate[bot]' || github.actor == 'snap-package-updater[bot]'

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@7ce9ffdcdeb2ba82b01b51d6584a6a85872336d4 # renovate: tag=v1.5.1
        with:
          app_id: ${{ secrets.REPOSITORY_ASSISTANT_APP_ID }}
          private_key: ${{ secrets.REPOSITORY_ASSISTANT_PRIVATE_KEY }}

      - name: GitHub - Get Pull Request ID
        id: github_get_pr_id
        uses: octokit/graphql-action@v2.2.1
        with:
          query: |
            query GetPullRequestId($owner: String!, $repo: String!, $pullRequestNumber: Int!) {
              repository(owner: $owner, name: $repo) {
                pullRequest(number: $pullRequestNumber) {
                  id
                }
              }
            }
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository.split('/')[1] }}
          pullRequestNumber: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ steps.github_generate_app_token.outputs.token }}

      - name: GitHub - Auto Merge Pull Request
        id: github_auto_merge_pr
        uses: octokit/graphql-action@v2.2.1
        with:
          query: |
            mutation ($pullRequestId: ID!, $mergeMethod: PullRequestMergeMethod!, $authorEmail: String!) {
              enablePullRequestAutoMerge(input: {
                pullRequestId: $pullRequestId,
                mergeMethod: $mergeMethod,
                authorEmail: $authorEmail
              }) {
                pullRequest {
                  autoMergeRequest {
                    enabledAt
                    enabledBy {
                      login
                    }
                  }
                }
              }
            }
          pullRequestId: ${{ fromJSON(steps.github_get_pr_id.outputs.data).repository.pullRequest.id }}
          mergeMethod: SQUASH
          authorEmail: ${{ secrets.GIT_USER_MAIL }}
        env:
          GITHUB_TOKEN: ${{ steps.github_generate_app_token.outputs.token }}
