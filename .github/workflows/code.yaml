name: "Code CI"

on:
  # run on pushes to main
  push:
    branches:
      - main
      - gh-readonly-queue/main/**
  # run on pull requests that target the main branch
  pull_request:
    branches:
      - main
  # run weekly on Monday at 12:00
  schedule:
    - cron: '0 12 * * 1'

concurrency:
  # on main, we want all builds to complete even if commits/merging happens faster to make it easier to discover at which point
  # something broke; else, we cancel "old" builds and run/(re)start the build with the latest changes
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}-{1}', github.workflow, github.sha) || format('ci-{0}-{1}', github.workflow, github.ref) }}

jobs:
  codeql_analyze:
    name: 'CodeQL - Analyze'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        # https://git.io/codeql-language-support
        language: ['javascript']

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      # Initializes the CodeQL tools for scanning.
      - name: CodeQL - Initialization
        id: codeql_initialization
        uses: github/codeql-action/init@0ba4244466797eb048eb91a6cd43d5c03ca8bd05 # v2.21.2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: CodeQL - Autobuild
        id: codeql_autobuild
        uses: github/codeql-action/autobuild@0ba4244466797eb048eb91a6cd43d5c03ca8bd05 # v2.21.2

      - name: CodeQL - Analysis
        id: codeql_analysis
        uses: github/codeql-action/analyze@0ba4244466797eb048eb91a6cd43d5c03ca8bd05 # v2.21.2

  typecheck:
    name: 'TypeScript - Type Check'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    env:
      # renovate: datasource=github-releases depName=casey/just
      JUST_VERSION: 1.14.0

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Node - Setup
        id: node_setup
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Just - Setup
        uses: extractions/setup-just@69d82fb0233557aec017ef13706851d0694e0f1d # v1
        with:
          just-version: ${{ env.JUST_VERSION }}
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: NPM - Install Dependencies
        id: npm_install
        # the audit is run separately
        run: npm ci --no-progress --prefer-offline --no-audit

      - name: TypeScript - Type Check
        id: typescript_typecheck
        run: just typecheck

  unit_tests:
    name: 'Jest - Unit Tests'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    env:
      # renovate: datasource=github-releases depName=casey/just
      JUST_VERSION: 1.14.0
      JUNIT_TEST_RESULTS_FILE: ./.test_results_junit.xml

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Node - Setup
        id: node_setup
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Just - Setup
        uses: extractions/setup-just@69d82fb0233557aec017ef13706851d0694e0f1d # v1
        with:
          just-version: ${{ env.JUST_VERSION }}
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: NPM - Install Dependencies
        id: npm_install
        # the audit is run separately
        run: npm ci --no-progress --prefer-offline --no-audit

      - name: Jest - Unit Tests
        id: jest_unit_tests
        run: just test_ci --coverage --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_FILE: ${{ env.JUNIT_TEST_RESULTS_FILE }}

      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        if: always()
        with:
          # https://github.com/EnricoMi/publish-unit-test-result-action/issues/161
          app_id: ${{ secrets.UNIT_TEST_RESULTS_REPORTER_APP_ID }}
          private_key: ${{ secrets.UNIT_TEST_RESULTS_REPORTER_PRIVATE_KEY }}

      - name: GitHub - Publish Unit Test Results
        id: github_publish_results
        uses: EnricoMi/publish-unit-test-result-action@f0b5d2433f350eff587831d4ad22cb15aab75866 # v2.8.0
        if: always()
        with:
          github_token: ${{ steps.github_generate_app_token.outputs.token }}
          check_name: Test Results
          junit_files: ${{ env.JUNIT_TEST_RESULTS_FILE }}
          # we only add github checks to the PR/commit, but don't create PR comments; reason is that comments will not
          # be replaced but always newly added due to (it looks for "github-actions" user instead of the github app user):
          # https://github.com/EnricoMi/publish-unit-test-result-action/blob/ae7c14a87cf1a1200805b487debc65963bdb3f2d/python/publish/publisher.py#L493
          comment_mode: off

      - name: Codecov - Upload Coverage Data
        id: codecov_upload_data
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: unittests
          env_vars: RUNNER_OS,RUNNER_ARCH,GITHUB_EVENT_NAME
          fail_ci_if_error: true
          verbose: true

  npm_audit:
    name: 'NPM - Audit'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Node - Setup
        id: node_setup
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: NPM - Audit
        id: npm_audit
        # this repository only has devDependencies (i.e. no runtime dependencies), so everything below moderate can be considered acceptable
        run: npm audit --audit-level=moderate
