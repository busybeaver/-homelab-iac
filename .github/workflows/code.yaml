name: "Code CI"

on:
  # run on pushes to main
  push:
    branches:
      - main
      - gh-readonly-queue/main/**
  # run on pull requests that target the main branch
  pull_request:
    branches:
      - main
  # run weekly on Monday at 12:00
  schedule:
    - cron: '0 12 * * 1'

concurrency:
  # on main, we want all builds to complete even if commits/merging happens faster to make it easier to discover at which point
  # something broke; else, we cancel "old" builds and run/(re)start the build with the latest changes
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}-{1}', github.workflow, github.sha) || format('ci-{0}-{1}', github.workflow, github.ref) }}

jobs:
  codeql_analyze:
    name: 'CodeQL - Analyze'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        # https://git.io/codeql-language-support
        language: ['javascript']

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      # Initializes the CodeQL tools for scanning.
      - name: CodeQL - Initialization
        id: codeql_initialization
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: CodeQL - Autobuild
        id: codeql_autobuild
        uses: github/codeql-action/autobuild@v1

      - name: CodeQL - Analysis
        id: codeql_analysis
        uses: github/codeql-action/analyze@v1

  typecheck:
    name: 'TypeScript - Type Check'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Node - Setup
        id: node_setup
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: NPM - Install Dependencies
        id: npm_install
        run: npm ci

      - name: TypeScript - Type Check
        id: typescript_typecheck
        run: npm run typecheck

  unit_tests:
    name: 'Jest - Unit Tests'
    runs-on: ubuntu-latest

    env:
      JUNIT_TEST_RESULTS_FILE: ./.test_results_junit.xml

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Node - Setup
        id: node_setup
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: NPM - Install Dependencies
        id: npm_install
        run: npm ci

      - name: Jest - Unit Tests
        id: jest_unit_tests
        run: npm run test -- --ci --coverage --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_FILE: ${{ env.JUNIT_TEST_RESULTS_FILE }}

      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@7ce9ffdcdeb2ba82b01b51d6584a6a85872336d4 # renovate: tag=v1.5.1
        if: always()
        with:
          # # https://github.com/EnricoMi/publish-unit-test-result-action/issues/161
          app_id: ${{ secrets.UNIT_TEST_RESULTS_REPORTER_APP_ID }}
          private_key: ${{ secrets.UNIT_TEST_RESULTS_REPORTER_PRIVATE_KEY }}

      - name: GitHub - Publish Unit Test Results
        id: github_publish_results
        uses: EnricoMi/publish-unit-test-result-action@d512bc689c979e673baaa5ad7b437ef1b6271eb8 # tag=v1.30
        if: always()
        with:
          github_token: ${{ steps.github_generate_app_token.outputs.token }}
          check_name: Unit Test Results
          comment_mode: update last
          hide_comments: all but latest
          files: ${{ env.JUNIT_TEST_RESULTS_FILE }}

      - name: Codecov - Upload Coverage Data
        id: codecov_upload_data
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # renovate: tag=v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: unittests
          env_vars: RUNNER_OS,RUNNER_ARCH,GITHUB_EVENT_NAME
          fail_ci_if_error: true
          verbose: true
